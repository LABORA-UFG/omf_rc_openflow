#!/usr/bin/env ruby
require 'fileutils'
require 'optparse'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($PROGRAM_NAME)} [options]"
  opts.on("-i", "--initscript", "Install init script to run the OMF RC on boot (as root)") do |i|
    options[:init] = i
  end
  opts.on("-c", "--configfile", "Install config file template in /etc/omf_rc/flowvisor_proxy_conf.yaml") do |c|
    options[:config] = c
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
  opts.on('-nc', '--no_conf', "Skip installation of configuration files") do |f|
    options[:no_conf] = true
  end
end

optparse.parse!

spec = Gem::Specification.find_by_name("omf_rc_openflow")
gem_root = spec.gem_dir
config_path = "/etc/omf_rc"
log_path = "/var/log/omf_rcs"

puts "Copying configuration files from '#{gem_root}'."

unless File.directory?(config_path)
  puts "Generating directory '#{config_path}'."
  FileUtils.mkdir_p(config_path)
end

unless File.directory?(log_path)
  puts "Generating directory '#{log_path}'."
  FileUtils.mkdir_p(log_path)
end

if options[:no_conf]
  puts "Skipping installation of configuration files."
else
  puts "Installing configuration files."
  conf_files = []
  conf_files << "flowvisor_proxy_conf.yaml"

  conf_files.each do |file|
    puts "Copying configuration file '#{gem_root}/etc/#{file}' to '#{config_path}'."
    FileUtils.cp "#{gem_root}/etc/#{file}", "#{config_path}/#{file}"
    FileUtils.chmod 0644, "#{config_path}/#{file}"
  end
  puts "All configuration files have been installed, browse folder '#{config_path}' to alternate them appropriatly."
end

puts "Copying initialization script 'run_openflow_rcs.sh'."
FileUtils.cp "#{gem_root}/init/run_openflow_rcs.sh", "/usr/local/bin/run_openflow_rcs.sh"

if options[:init]
  puts "Detecting operating system..."
  FileUtils.cp "#{gem_root}/init/run_openflow_rcs.sh", "/usr/local/bin/run_openflow_rcs.sh"
  if !File.exist?("/etc/issue")
    abort "Unknown or unsupported operating system. Cannot install init script."
  end
  issue = File.read("/etc/issue")
  case issue
    when /Ubuntu/
      FileUtils.cp_r "#{gem_root}/init/ubuntu/.", "/etc/init/"
      puts "Upstart scripts for Ubuntu has been installed. Execute 'start flowvisor_rc' to run the daemon."
    when /Debian/
      FileUtils.cp "#{gem_root}/init/debian", "/etc/init.d/omf_rc"
      `update-rc.d omf_rc defaults`
      puts "Init script for Debian has been installed. Execute '/etc/init.d/omf_flowvisor_rc start' to run the daemon."
    else
      abort "OS '#{issue}' is not supported. Cannot install init script."
  end
end

puts "done."